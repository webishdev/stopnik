name: Create STOPnik release

on:
  workflow_dispatch:
    inputs:
      stopnik_version:
        type: string
        description: Version for the tag
        required: true

permissions:
  contents: write

env:
  CGO_ENABLED: 0

jobs:

  build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]

    steps:
      - name: Show tag
        run: echo "Will create version ${{ inputs.stopnik_version }}"

      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Display Go version
        run: go version

      - name: Build
        run: |
          VERSION_INPUT=${{ inputs.stopnik_version }}
          CURRENT_VERSION=${VERSION_INPUT:-"ci"}
          ./build.sh build_ci $CURRENT_VERSION ${{ matrix.os }}

      - name: Tests
        run: ./test.sh coverage

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.59

      - name: Upload build result
        uses: actions/upload-artifact@v4
        with:
          name: build_result_${{ matrix.os }}
          path: bin/**
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Retrieve artifacts for ubuntu-latest
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: bin

      - name: Display structure of downloaded files
        run: ls -R

      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ inputs.stopnik_version }}
          body: >
            STOPnik!
            Version ${{ inputs.stopnik_version }}
          artifacts: "bin/*.zip"
